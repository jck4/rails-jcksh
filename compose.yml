services:
  foundry:
    image: felddy/foundryvtt:release
    container_name: foundryvtt
    restart: unless-stopped
    volumes:
      - foundry_data:/data
    environment:
      - FOUNDRY_USERNAME=${FOUNDRY_USERNAME}
      - FOUNDRY_PASSWORD=${FOUNDRY_PASSWORD}
      - FOUNDRY_ADMIN_KEY=${FOUNDRY_PASSWORD}
      - FOUNDRY_LICENSE_KEY=${FOUNDRY_LICENSE_KEY}
      - FOUNDRY_HOSTNAME=dnd.jck.sh
      - FOUNDRY_PORT=30000
    ports:
      - "30000:30000"

  caddy:
    image: caddy:latest
    container_name: caddy
    restart: unless-stopped
    volumes:
      - caddy_data:/data
      - caddy_config:/config
      - ./Caddyfile:/etc/caddy/Caddyfile
    ports:
      - "80:80"
      - "443:443"

  rails_app:
    build:
      context: ./jck.sh
      dockerfile: Dockerfile
    container_name: rails_app
    restart: unless-stopped
    environment:
      DATABASE_HOST: db
      DATABASE_USERNAME: ${POSTGRES_USER}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_NAME: rails_db
      RAILS_ENV: production
      RAILS_LOG_TO_STDOUT: "true"
      SECRET_KEY_BASE: "${RAILS_SECRET}"
    ports:
      - "3000:3000"
    depends_on:
      - db
    volumes:
      - bundle_data:/usr/local/bundle
      - ./jck.sh:/jck.sh

  db:
    image: postgres:14
    container_name: postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: rails_db
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"


volumes:
  foundry_data:
  caddy_data:
  caddy_config:
  bundle_data:
  db_data:
